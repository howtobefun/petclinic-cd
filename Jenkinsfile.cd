// vim: syntax=groovy
pipeline {
    agent any
    parameters {
        string(name: 'customers_service_branch', defaultValue: 'main', description: 'Branch for customers-service')
        string(name: 'vets_service_branch', defaultValue: 'main', description: 'Branch for vets-service')
        string(name: 'visits_service_branch', defaultValue: 'main', description: 'Branch for visits-service')
        string(name: 'genai_service_branch', defaultValue: 'main', description: 'Branch for genai-service')
    }
    environment {
        MAVEN_OPTS = "-Dmaven.repo.local=.m2/repository"
        MINIKUBE_IP = "192.168.49.2" //  Make sure this matches your Minikube IP. You can also retrieve dynamically in the script
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Deploy to Minikube') {
            steps {
                withCredentials([file(credentialsId: 'kubeconfig-credentials', variable: 'KUBECONFIG_FILE')]) {
                    sh """
                        export KUBECONFIG=$KUBECONFIG_FILE

                        def servicesBranches = [
                            'customers-service': params.customers_service_branch,
                            'vets-service': params.vets_service_branch,
                            'visits-service': params.visits_service_branch,
                            'genai-service': params.visits_service_branch,
                            'genai-service': params.genai_service_branch
                        ]

                        servicesBranches.each { service, branch ->
                            echo "Deploying \${service} with branch \${branch}"
                            def imageName = "howtobefun/spring-petclinic-\${service}" // Assuming your image naming convention

                            //  Apply Kubernetes manifests and set the image
                            kubectl apply -f k8s/\${service}-deployment.yaml -n default
                            kubectl set image deployment/\${service} \${service}=\${imageName}:\${branch} -n default
                            kubectl apply -f k8s/\${service}-service.yaml -n default
                        }
                    """                
                }
            }
        }
        stage('Post-Deployment Instructions') {
            steps {
                steps {
                    echo "To access the Petclinic application:"
                    echo "1. Add the following to your /etc/hosts file:"
                    echo "   ${MINIKUBE_IP} petclinic.local"  //  e.g., 192.168.49.2 petclinic.local
                    echo "2. Access the services in your browser using the following URLs:"
                    echo "   - Customers Service: http://petclinic.local:30001"
                    echo "   - Vets Service: http://petclinic.local:30002"
                    echo "   - Visits Service: http://petclinic.local:30003"
                    echo "   - Genai Service: http://petclinic.local:30004"
                    echo "   - API Gateway: http://petclinic.local:30005"  //  If you have it
                    echo "   - Discovery Server: http://petclinic.local:30006" //  If you have it
                    echo "   - Config Server: http://petclinic.local:30007"    //  If you have it
                    echo "   - Admin Server: http://petclinic.local:30008"     //  If you have it
                    echo "   - Zipkin Server: http://petclinic.local:30009"    // If you have it
                }            
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
