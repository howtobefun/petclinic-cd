// vim: syntax=groovy
pipeline {
    agent any
    parameters {
        string(name: 'customers_service_branch', defaultValue: 'main', description: 'Branch for customers-service')
        string(name: 'vets_service_branch', defaultValue: 'main', description: 'Branch for vets-service')
        string(name: 'visits_service_branch', defaultValue: 'main', description: 'Branch for visits-service')
        string(name: 'genai_service_branch', defaultValue: 'main', description: 'Branch for genai-service')
    }
    environment {
        MAVEN_OPTS = "-Dmaven.repo.local=.m2/repository"
        MINIKUBE_IP = "192.168.49.2" // Ensure this matches your Minikube IP; consider retrieving dynamically if needed
    }
    stages {
        stage('Prepare kubeconfig') {
            steps {
                sh '''
                    mkdir -p $WORKSPACE/.kube
                    cp ~/.kube/config $WORKSPACE/.kube/config
                    cp -r ~/.minikube $WORKSPACE/.minikube
                '''
            }
        }

        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Deploy to Minikube') {
            environment {
                KUBECONFIG = "${WORKSPACE}/.kube/config"
            }
            steps {
                script {
                    def servicesBranches = [
                        'customers-service': params.customers_service_branch,
                        'vets-service': params.vets_service_branch,
                        'visits-service': params.visits_service_branch,
                        'genai-service': params.genai_service_branch
                    ]

                    def deployScript = ""
                    servicesBranches.each { service, branch ->
                        def imageName = "howtobefun/spring-petclinic-${service}:${branch}"
                        deployScript += """
                            echo "Deploying ${service} with branch ${branch}"
                            kubectl apply -f k8s/${service}-deployment.yaml -n default
                            kubectl set image deployment/${service} ${service}=${imageName} -n default
                            kubectl apply -f k8s/${service}-service.yaml -n default
                        """
                    }

                    sh """
                        ${deployScript}
                    """
                }
            }
        }

        stage('Post-Deployment Instructions') {
            steps {
                echo "To access the Petclinic application:"
                echo "1. Add the following to your /etc/hosts file:"
                echo "   ${env.MINIKUBE_IP} petclinic.local"
                echo "2. Access the services in your browser using the following URLs:"
                echo "   - Customers Service: http://petclinic.local:30001"
                echo "   - Vets Service: http://petclinic.local:30002"
                echo "   - Visits Service: http://petclinic.local:30003"
                echo "   - Genai Service: http://petclinic.local:30004"
                echo "   - API Gateway: http://petclinic.local:30005"
                echo "   - Discovery Server: http://petclinic.local:30006"
                echo "   - Config Server: http://petclinic.local:30007"
                echo "   - Admin Server: http://petclinic.local:30008"
                echo "   - Zipkin Server: http://petclinic.local:30009"
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
